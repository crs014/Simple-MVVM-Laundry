<ResourceDictionary x:Class="Laundry.Asset.Style"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Laundry.Asset"
             mc:Ignorable="d" >


    <!-- Start Color -->
    <SolidColorBrush x:Key="MainSolidColor" Color="#3a5b8c" />
    <SolidColorBrush x:Key="HoverSolidColor" Color="#2A4B7C"/>
    <SolidColorBrush x:Key="DisableSolidColor" Color="#85b2d3"/>
    <!-- End Color -->
    
    <!-- Start Template -->
    <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
        <Grid TextBlock.FontSize="11" TextBlock.Foreground="White">
            <Rectangle x:Name="ButtonRetangle" Fill="{DynamicResource MainSolidColor}"/>
            <ContentPresenter Content="{TemplateBinding Content}" Margin="10,0,10,0"
                                  HorizontalAlignment = "Center" VerticalAlignment = "Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property = "IsMouseOver" Value = "True">
                <Setter TargetName="ButtonRetangle" Property="Fill" Value="{DynamicResource HoverSolidColor}">
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value = "False">
                <Setter TargetName="ButtonRetangle" Property="Fill" Value="{DynamicResource DisableSolidColor}">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0"  Background="{DynamicResource MainSolidColor}" BorderBrush="{DynamicResource MainSolidColor}" BorderThickness="1" />
            <Border Grid.Column="0" CornerRadius="0" Margin="1" Background="White" BorderBrush="{DynamicResource MainSolidColor}" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverSolidColor}" />
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverSolidColor}" />
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisableSolidColor}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisableSolidColor}" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBoxTemplate" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <!-- End Template -->

    <!-- Start Style -->
    <Style x:Key="buttonFlat" TargetType="{x:Type Button}">
        <Setter Property="Control.Margin" Value="0,0,10,0"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource MainSolidColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Control.Margin" Value="0,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="6,0,0,0"/>
    </Style>
    <Style x:Key="LabelInput" TargetType="{x:Type Label}">
        <Setter Property="Control.Foreground" Value="{DynamicResource MainSolidColor}"/>
        <Setter Property="Control.FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="LabelHeader" TargetType="{x:Type Label}">
        <Setter Property="Control.Foreground" Value="{DynamicResource MainSolidColor}"/>
        <Setter Property="Control.FontSize" Value="30"/>
        <Setter Property="Control.Margin" Value="0,0,0,0"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource HeaderStyle}"></Setter>
        <Setter Property="CellStyle" Value="{DynamicResource CellStyle}"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource MainSolidColor}"></Setter>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource MainSolidColor}"></Setter>
    </Style>
    <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource MainSolidColor}"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource DisableSolidColor}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButtonTemplate}" Grid.Column="2" Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,0,23,0"
                                      VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBoxTemplate}" HorizontalAlignment="Left" 
                                      VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent"
                                      Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" 
                                   AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" 
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#FFFFFF" BorderThickness="1" BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainSolidColor}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisableSolidColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End Style -->

    <!---Start Bitmap Image Source-->
    <BitmapImage UriSource="/Laundry.Asset;component/Images/Common/Background.jpg" x:Key="Background"/>
    <!---End Bitmap Image Source-->
</ResourceDictionary>
